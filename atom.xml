<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://dengguan.github.io.git/"/>
  <updated>2017-09-19T02:36:18.906Z</updated>
  <id>http://dengguan.github.io.git/</id>
  
  <author>
    <name>dengguan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IE和DOM事件的区别</title>
    <link href="http://dengguan.github.io.git/2017/09/19/IE/"/>
    <id>http://dengguan.github.io.git/2017/09/19/IE/</id>
    <published>2017-09-19T02:23:36.000Z</published>
    <updated>2017-09-19T02:36:18.906Z</updated>
    
    <content type="html"><![CDATA[<p>1.事件流的区别 </p>
<p>IE采用冒泡型事件 Netscape使用捕获型事件 DOM使用先捕获后冒泡型事件<br>示例： </p>
<p>复制代码代码如下:</p>
<pre><code>&lt;body&gt; 
&lt;div&gt; 
&lt;button&gt;点击这里&lt;/button&gt; 
&lt;/div&gt; 
&lt;/body&gt;
</code></pre><p>冒泡型事件模型： button-&gt;div-&gt;body (IE事件流) </p>
<p>捕获型事件模型： body-&gt;div-&gt;button (Netscape事件流) </p>
<p>DOM事件模型： body-&gt;div-&gt;button-&gt;button-&gt;div-&gt;body (先捕获后冒泡) </p>
<p>2.事件侦听函数的区别 </p>
<p>IE使用:<br>[Object].attachEvent(“name_of_event_handler”, fnHandler); //绑定函数<br>[Object].detachEvent(“name_of_event_handler”, fnHandler); //移除绑定 </p>
<p>DOM使用：<br>[Object].addEventListener(“name_of_event”, fnHandler, bCapture); //绑定函数<br>[Object].removeEventListener(“name_of_event”, fnHandler, bCapture); //移除绑定 </p>
<p>bCapture参数用于设置事件绑定的阶段，true为捕获阶段，false为冒泡阶段。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.事件流的区别 &lt;/p&gt;
&lt;p&gt;IE采用冒泡型事件 Netscape使用捕获型事件 DOM使用先捕获后冒泡型事件&lt;br&gt;示例： &lt;/p&gt;
&lt;p&gt;复制代码代码如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt; 
&amp;lt;div&amp;gt; 
&amp;lt;button&amp;g
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>interview</title>
    <link href="http://dengguan.github.io.git/2017/09/19/interview/"/>
    <id>http://dengguan.github.io.git/2017/09/19/interview/</id>
    <published>2017-09-19T02:13:49.000Z</published>
    <updated>2017-09-19T02:15:58.214Z</updated>
    
    <content type="html"><![CDATA[<p>HTML+CSS<br>1.对WEB标准以及W3C的理解与认识<br>标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外 链css和js脚本、结构行为表现的分离、文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，容易维 护、改版方便，不需要变动页面内容、提供打印版本而不需要复制内容、提高网站易用性；</p>
<p>2.xhtml和html有什么区别<br>HTML是一种基本的WEB网页设计语言，XHTML是一个基于XML的置标语言<br>最主要的不同：<br>XHTML 元素必须被正确地嵌套。<br>XHTML 元素必须被关闭。<br>标签名必须用小写字母。<br>XHTML 文档必须拥有根元素。</p>
<p>3.Doctype? 严格模式与混杂模式-如何触发这两种模式，区分它们有何意义?<br>用于声明文档使用那种规范（html/Xhtml）一般为 严格 过度 基于框架的html文档<br>加入XMl声明可触发，解析方式更改为IE5.5 拥有IE5.5的bug</p>
<p>4.行内元素有哪些?块级元素有哪些?CSS的盒模型?<br>块级元素：div p h1 h2 h3 h4 form ul<br>行内元素: a b br i span input select<br>Css盒模型:内容，border ,margin，padding</p>
<p>5.CSS引入的方式有哪些? link和@import的区别是?<br>内联 内嵌 外链 导入<br>区别 ：同时加载<br>前者无兼容性，后者CSS2.1以下浏览器不支持<br>Link 支持使用javascript改变样式，后者不可</p>
<p>6.CSS选择符有哪些?哪些属性可以继承?优先级算法如何计算?内联和important哪个优先级高?<br>标签选择符 类选择符 id选择符<br>继承不如指定 Id&gt;class&gt;标签选择<br>后者优先级高</p>
<p>7.前端页面有哪三层构成，分别是什么?作用是什么?<br>结构层 Html 表示层 CSS 行为层 js</p>
<p>8.css的基本语句构成是?<br>选择器{属性1:值1;属性2:值2;……}</p>
<p>9.你做的页面在哪些流览器测试过?这些浏览器的内核分别是什么?<br>Ie(Ie内核) 火狐（Gecko） 谷歌（webkit） opear(Presto)</p>
<p>10.写出几种IE6 BUG的解决方法<br>1.双边距BUG float引起的 使用display<br>2.3像素问题 使用float引起的 使用dislpay:inline -3px<br>3.超链接hover 点击后失效 使用正确的书写顺序 link visited hover active<br>4.Ie z-index问题 给父级添加position:relative<br>5.Png 透明 使用js代码 改<br>6.Min-height 最小高度 ！Important 解决’<br>7.select 在ie6下遮盖 使用iframe嵌套<br>8.为什么没有办法定义1px左右的宽度容器（IE6默认的行高造成的，使用over:hidden,zoom:0.08 line-height:1px）</p>
<p>11.标签上title与alt属性的区别是什么?<br>Alt 当图片不显示是 用文字代表。<br>Title 为该属性提供信息</p>
<p>12.描述css reset的作用和用途。<br>Reset重置浏览器的css默认属性 浏览器的品种不同，样式不同，然后重置，让他们统一</p>
<p>13.解释css sprites，如何使用。<br>Css 精灵 把一堆小的图片整合到一张大的图片上，减轻服务器对图片的请求数量</p>
<p>14.浏览器标准模式和怪异模式之间的区别是什么?<br>盒子模型 渲染模式的不同<br>使用 window.top.document.compatMode 可显示为什么模式</p>
<p>15.你如何对网站的文件和资源进行优化?期待的解决方案包括：<br>文件合并<br>文件最小化/文件压缩<br>使用CDN托管<br>缓存的使用</p>
<p>16.什么是语义化的HTML?<br>直观的认识标签 对于搜索引擎的抓取有好处</p>
<p>17.清除浮动的几种方式，各自的优缺点<br>1.使用空标签清除浮动 clear:both（理论上能清楚任何标签，，，增加无意义的标签）<br>2.使用overflow:auto（空标签元素清除浮动而不得不增加无意代码的弊端,,使用zoom:1用于兼容IE）<br>3.是用afert伪元素清除浮动(用于非IE浏览器)</p>
<p>Javascript<br>1.javascript的typeof返回哪些数据类型<br>Object number function boolean underfind</p>
<p>2.例举3种强制类型转换和2种隐式类型转换?<br>强制（parseInt,parseFloat,number）<br>隐式（== – ===）</p>
<p>3.split() join() 的区别<br>前者是切割成数组的形式，后者是将数组转换成字符串</p>
<p>4.数组方法pop() push() unshift() shift()<br>Push()尾部添加 pop()尾部删除<br>Unshift()头部添加 shift()头部删除</p>
<p>5.事件绑定和普通事件有什么区别</p>
<p>6.IE和DOM事件流的区别<br>1.执行顺序不一样、<br>2.参数不一样<br>3.事件加不加on<br>4.this指向问题</p>
<p>7.IE和标准下有哪些兼容性的写法<br>Var ev = ev || window.event<br>document.documentElement.clientWidth || document.body.clientWidth<br>Var target = ev.srcElement||ev.target</p>
<p>8.ajax请求的时候get 和post方式的区别<br>一个在url后面 一个放在虚拟载体里面<br>有大小限制<br>安全问题<br>应用不同 一个是论坛等只需要请求的，一个是类似修改密码的</p>
<p>9.call和apply的区别<br>Object.call(this,obj1,obj2,obj3)<br>Object.apply(this,arguments)</p>
<p>10.ajax请求时，如何解释json数据<br>使用eval parse 鉴于安全性考虑 使用parse更靠谱<br>11.b继承a的方法</p>
<p>12.写一个获取非行间样式的函数</p>
<p>function getStyle(obj,attr,value)<br>{<br>if(!value)<br>{<br>if(obj.currentStyle)<br>{<br>return obj.currentStyle(attr)<br>}<br>else<br>{<br>obj.getComputedStyle(attr,false)<br>}<br>}<br>else<br>{<br>obj.style[attr]=value<br>}<br>}</p>
<p>13.事件委托是什么<br>让利用事件冒泡的原理，让自己的所触发的事件，让他的父元素代替执行！<br><a href="http://www.webasily.com/?p=78" target="_blank" rel="external">http://www.webasily.com/?p=78</a> 例子可见此链接</p>
<p>14.闭包是什么，有什么特性，对页面有什么影响<br>闭包就是能够读取其他函数内部变量的函数。<br><a href="http://blog.csdn.net/gaoshanwudi/article/details/7355794" target="_blank" rel="external">http://blog.csdn.net/gaoshanwudi/article/details/7355794</a> 此链接可查看（问这个问题的不是一个公司）</p>
<p>15.如何阻止事件冒泡和默认事件<br>canceBubble return false</p>
<p>16.添加 删除 替换 插入到某个接点的方法<br>obj.appendChidl()<br>obj.innersetBefore<br>obj.replaceChild<br>obj.removeChild</p>
<p>17.解释jsonp的原理，以及为什么不是真正的ajax<br>动态创建script标签，回调函数<br>Ajax是页面无刷新请求数据操作</p>
<p>18.javascript的本地对象，内置对象和宿主对象<br>本地对象为array obj regexp等可以new实例化<br>内置对象为gload Math 等不可以实例化的<br>宿主为浏览器自带的document,window 等</p>
<p>19.document load 和document ready的区别<br>Document.onload 是在结构和样式加载完才执行js<br>Document.ready原生种没有这个方法，jquery中有 $().ready(function)</p>
<p>20.”==”和“===”的不同<br>前者会自动转换类型<br>后者不会</p>
<p>21.javascript的同源策略<br>一段脚本只能读取来自于同一来源的窗口和文档的属性，这里的同一来源指的是主机名、协议和端口号的组合</p>
<p>22.编写一个数组去重的方法<br>function oSort(arr)<br>{<br>var result ={};<br>var newArr=[];<br>for(var i=0;i&lt;arr.length;i++)<br>{<br>if(!result[arr])<br>{<br>newArr.push(arr)<br>result[arr]=1<br>}<br>}<br>return newArr<br>}</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML+CSS&lt;br&gt;1.对WEB标准以及W3C的理解与认识&lt;br&gt;标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外 链css和js脚本、结构行为表现的分离、文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，容易维
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>tags</title>
    <link href="http://dengguan.github.io.git/2017/08/29/tags/"/>
    <id>http://dengguan.github.io.git/2017/08/29/tags/</id>
    <published>2017-08-29T07:00:59.000Z</published>
    <updated>2017-08-29T07:00:59.705Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>article title</title>
    <link href="http://dengguan.github.io.git/2017/08/27/article-title/"/>
    <id>http://dengguan.github.io.git/2017/08/27/article-title/</id>
    <published>2017-08-27T07:10:19.000Z</published>
    <updated>2017-08-27T07:10:19.693Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://dengguan.github.io.git/2017/08/27/hello-world/"/>
    <id>http://dengguan.github.io.git/2017/08/27/hello-world/</id>
    <published>2017-08-27T06:36:50.479Z</published>
    <updated>2017-08-27T06:36:50.479Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
